<%- include('./shared/head-panel.ejs')%>
<%- include('./shared/user-panel.ejs')%>
<div class="container_fluid google_map_fluid">
    <!-- <iframe
        src="https://www.google.com/maps/embed?pb=!1m14!1m12!1m3!1d69767.72561695063!2d151.09497095055784!3d-33.8333146204557!2m3!1f0!2f0!3f0!3m2!1i1024!2i768!4f13.1!5e0!3m2!1sen!2sin!4v1600272606024!5m2!1sen!2sin"
        width="100%" height="550" frameborder="0" style="border:0;" allowfullscreen="" aria-hidden="false"
        tabindex="0"></iframe> -->
    <div id="map" style="width: 100%;height:550px;"></div>
    <div class="choose__dev_option">
        <div class="container">
            <div class="row">
                <div class="check__box location">
                    <!-- <input type="radio" id="male" name="gender" value="male"> -->
                    <div class="icon"></div>
                    <label for="location" onclick="showSuburbModal()">Pick from Location</label>
                </div>
            </div>
        </div>
    </div>
</div>
<div class="selected_shop_fluid">
    <div class="container" id="delivery-panel">

    </div>
</div>
<div class="container-fluid mb-5" id="products_list">
    <div class="container">
        <!-- <h5 class="headding">  </h5> -->
        <div class="row jcc">
            <div class="col-12 mt-5">
                <div class="headding__section text-center mb-4"> <b> Address Details </b>
                    <a href="<%=app_url%>/addresses">
                        <div class="btn btn-dark btn-sm border"> New Address </div>
                    </a>
                </div>
            </div>
            <div class="col-lg-4 col-sm-6 col-12 mb-4 mb-sm-0">
                <div class="address_card" id="activeAddressCard">
                </div>
            </div>
        </div>
        <hr class="mt-5">
        <div class="row jcc mt-3 mb-3">
            <div class="col-md-4">
                <div class="open_cal">
                    <img src="<%=app_url%>/public/web/images/calendar.svg" alt="">
                    <h5 class="headding"> Schedule Your Food </h5>
                    <!-- <div class="btn btn-primary"> Open Calendar </div> -->
                    <input type="text" class="form-control date_single mt-4 mb-2 date-select"
                        placeholder="Pick Your Date">
                    <select class="form-control shift" name="shift" style="border-radius: 5PX;">
                        <option value="">Select Shift</option>
                        <%
                            shifts.forEach(shift=>{
                                %>
                        <option value="<%=shift._id%>"><%=shift.name%></option>
                        <%
                            })
                        %>
                    </select>
                </div>
            </div>
        </div>
        <hr>
        <h6 class="headding mt-5"> Your schedule details </h6>
        <div class="title_bar">
            <div>Total Credits : <%=food_credits.toFixed(2)%> AUD</div>
            <!-- <div>Total Days : 07</div> -->
        </div>

        <div class="day_status_bar row jce mt-4 mb-4">
            <div class="col-auto">
                <!-- <div class="btn btn-dark btn-sm mr-2"> Change Location </div>
                <div class="btn btn-dark btn-sm "> Cancel the Scheduled Days </div> -->
            </div>
        </div>
        <div class="row list">
        </div>
        <div class="mt-3">
            <a href="javascript:;" id="checkBtn" onclick="checkOrder()">
                <div class="btn btn-primary btn-lg btn-round"> Continue </div>
            </a>
        </div>
    </div>
</div>
<%-include('./shared/suburb-modal.ejs')%>
<%-include('./shared/addresses-modal.ejs')%>
<%-include('./shared/scripts.ejs')%>
<script src="//cdnjs.cloudflare.com/ajax/libs/list.js/1.5.0/list.min.js"></script>
<script>
    var delivery_address_id = "<%=delivery_address%>"
    var delivery_type = ""
    var scheduled_date = null
    var shift = null

    $('.shift').on('change', function () {
        shift = $(this).val()
    })

    $('.date-select').on('change', function () {
        scheduled_date = $(this).val()
    })

    var gst = "<%=gst%>"
    var delivery_charge = "<%=delivery_charge%>"

    var selected_suburb = ''
    var infowindow = null
    var icons = {
        van: ASSET_URL + "/public/icons/van.png",
        cp: ASSET_URL + "/public/icons/cp.png",
        user: ASSET_URL + "/public/icons/person.png",
    };
    var initloc = {
        lat: -25.344,
        lng: 131.036
    };
    var cps = {}


    $('.select2-show-search').select2({
        minimumResultsForSearch: ''
    });

    function changeDeliveryType(type) {
        $('#delivery-panel').html('');
        var html = ''
        if (type == "express") {
            html += `
            <div class="shop_card express">
                <img src="<%=app_url%>/public/web/images/delivery_vehicle.svg" alt="">
                <div class="shop_details">
                    <h3> Delivery </h3>
                </div>
            </div>
            `
        } else {
            html += `
            <div class="shop_card shop" hidden>
                <img src="<%=app_url%>/public/web/images/shop-icon.svg" alt="">
                <div class="shop_details">
                    <h3> RiceNGrills Shop </h3>
                </div>
            </div>
            `
        }
        $('#delivery-panel').html(html);
    }

    function changeAddress() {
        $.ajax({
            url: "<%=app_url%>/setaddress",
            data: {
                address_id: delivery_address_id
            },
            type: "GET",
            dataType: "json",
            success: function (data) {
                var {
                    status
                } = data;
                if (status) {
                    console.log('Address changed')
                }
            }
        });
    }

    function chooseUserAddress(el) {
        $('#addresses-modal').modal('toggle')
    }

    function deliverToThisLocation(el) {
        address_id = $(el).data('address')
        delivery_address_id = address_id
        changeAddress()
        renderAddress()
        infowindow.close()
        toastr["success"]('Address changed');
        $(window).scrollTop($('#activeAddressCard').offset().top - +100);
    }

    function renderAddress() {
        $('#addresses-modal').modal('hide')
        $.ajax({
            url: "<%=app_url%>/addressdetails",
            data: {
                address_id: delivery_address_id
            },
            type: "GET",
            dataType: "json",
            success: function (data) {
                var {
                    status,
                    address
                } = data;
                var html = ''
                if (address) {
                    var { _id, type, address_line1, address_line2, address_type, appartment, contact_person, house_flat_no, landmark, to_reach } = address
                    if (type == "USER") {
                        delivery_type = "express"
                        changeDeliveryType("express")
                        html += `
                            <u> ${address_type} </u>
                            <p> ${address_line1}</p>
                            <p> ${house_flat_no},${appartment} </p>
                            <p> Land Mark : ${landmark}</p>
                            <p> To reach : ${to_reach}</p>
                            <p> Conatact Person : ${contact_person}</p>
                            <div class="btn btn-dark btn-sm edit-btn" data-address="${_id}" onclick="chooseUserAddress(this)"> Change </div>
                        `
                    } else {
                        delivery_type = "shop"
                        changeDeliveryType("shop")
                        html += `
                            <u> COLLECTION POINT </u>
                            <p> ${address_line1}</p>
                            <p> ${address_line2} </p>
                            <div class="btn btn-dark btn-sm edit-btn" data-address="${_id}" onclick="chooseUserAddress(this)"> Change </div>
                        `
                    }
                } else {
                    html += `
                        <a href="${APP_URL}/addresses"><div class="btn btn-dark btn-sm"> Add new address </div></a>
                    `
                }
                $('#activeAddressCard').html(html)
            }
        });
        return false
    }
    renderAddress()

    function initMap() {
        map = new google.maps.Map(document.getElementById('map'), {
            zoom: 16,
            center: initloc,
            mapTypeId: google.maps.MapTypeId.ROADMAP,
            mapTypeControl: false,
            styles: [
                { elementType: 'geometry', stylers: [{ color: '#242f3e' }] },
                { elementType: 'labels.text.stroke', stylers: [{ color: '#242f3e' }] },
                { elementType: 'labels.text.fill', stylers: [{ color: '#746855' }] },
                {
                    featureType: 'administrative.locality',
                    elementType: 'labels.text.fill',
                    stylers: [{ color: '#d59563' }]
                },
                {
                    featureType: 'poi',
                    elementType: 'labels.text.fill',
                    stylers: [{ color: '#d59563' }]
                },
                {
                    featureType: 'poi.park',
                    elementType: 'geometry',
                    stylers: [{ color: '#263c3f' }]
                },
                {
                    featureType: 'poi.park',
                    elementType: 'labels.text.fill',
                    stylers: [{ color: '#6b9a76' }]
                },
                {
                    featureType: 'road',
                    elementType: 'geometry',
                    stylers: [{ color: '#38414e' }]
                },
                {
                    featureType: 'road',
                    elementType: 'geometry.stroke',
                    stylers: [{ color: '#212a37' }]
                },
                {
                    featureType: 'road',
                    elementType: 'labels.text.fill',
                    stylers: [{ color: '#9ca5b3' }]
                },
                {
                    featureType: 'road.highway',
                    elementType: 'geometry',
                    stylers: [{ color: '#746855' }]
                },
                {
                    featureType: 'road.highway',
                    elementType: 'geometry.stroke',
                    stylers: [{ color: '#1f2835' }]
                },
                {
                    featureType: 'road.highway',
                    elementType: 'labels.text.fill',
                    stylers: [{ color: '#f3d19c' }]
                },
                {
                    featureType: 'transit',
                    elementType: 'geometry',
                    stylers: [{ color: '#2f3948' }]
                },
                {
                    featureType: 'transit.station',
                    elementType: 'labels.text.fill',
                    stylers: [{ color: '#d59563' }]
                },
                {
                    featureType: 'water',
                    elementType: 'geometry',
                    stylers: [{ color: '#17263c' }]
                },
                {
                    featureType: 'water',
                    elementType: 'labels.text.fill',
                    stylers: [{ color: '#515c6d' }]
                },
                {
                    featureType: 'water',
                    elementType: 'labels.text.stroke',
                    stylers: [{ color: '#17263c' }]
                }
            ]
        });
        getCollectionPoints()
        setInterval(function () {
            getCollectionPoints()
        }, 30000);
    }
    function getCPInfoWindow(cp) {
        var address = cp.address
        return contentString = `
                        <div class="address_card">
                            <u> COLLECTION POINT </u>
                            <p> Name: ${cp.name}</p>
                            <p> ${cp.email}, ${cp.mobile}</p>
                            <p> ${address.address_line1}</p>
                            <p> ${address.address_line2}</p>
                            <div class="btn btn-dark btn-sm edit-btn" data-address="${address._id}" onclick="deliverToThisLocation(this)">Pickup from this collectionpoint</div>
                        </div>
        `
    }
    function setCollectionPoints(collectionpoints) {
        var icon = {
            scaledSize: new google.maps.Size(50, 50),
            labelOrigin: new google.maps.Point(30, 50),
            url: icons.cp,
            origin: new google.maps.Point(0, 0),
            anchor: new google.maps.Point(11, 40),
        };

        $.each(collectionpoints, function (key, cp) {
            if (cp.location) {
                if (typeof cp.location.coordinates[1] == 'number' && typeof cp.location.coordinates[0] == 'number') {
                    console.log(cp.location.coordinates)
                    var position = new google.maps.LatLng(cp.location.coordinates[1], cp.location.coordinates[0]);
                    if (typeof cps[cp._id] == 'undefined') {
                        cps[cp._id] = new google.maps.Marker({
                            map,
                            icon,
                            draggable: false,
                            animation: google.maps.Animation.BOUNCE,
                            position,
                            address: cp.address,
                            name: cp.name,
                            email: cp.email,
                            mobile: cp.mobile
                        });
                        google.maps.event.addListener(cps[cp._id], 'click', function () {
                            if (infowindow) {
                                infowindow.close();
                            }
                            infowindow = new google.maps.InfoWindow({
                                content: getCPInfoWindow(cps[cp._id]),
                            });
                            infowindow.open(map, cps[cp._id]);
                        });
                        map.setZoom(16);
                        map.panTo(position);
                    }
                }
            }
        })

    }
    function getDirections(lat, lng) {
        var point = new google.maps.LatLng(lat, lng)
        map.setZoom(16);
        map.panTo(point);
    }

    function renderCollectionPointTable(collectionpoints) {
        cp_list.clear()
        $.each(collectionpoints, function (key, cp) {
            cp_list.add({
                'item_cp': cp.name,
                'item_address': cp.address.address_line1,
                'item_location': `<a class="btn btn-success text-white" onclick="getDirections(${cp.location.coordinates[1]},${cp.location.coordinates[0]})"><i class="fa fa-map-marker"></i></a>`
            })
        })
    }

    function clearCPS() {
        for (var cp in cps) {
            cps[cp].setMap(null)
        }
        cps = {}
    }

    function getCollectionPoints() {
        clearCPS()
        $.ajax({
            url: "<%=app_url%>/getcollectionpoints",
            data: {
                selected_suburb
            },
            type: "GET",
            dataType: "json",
            success: function (data) {
                var {
                    status,
                    message,
                    errors,
                    collectionpoints
                } = data;
                errors = typeof errors != 'undefined' ? errors : []
                message = typeof message != 'undefined' ? message : null
                data = typeof data != 'undefined' ? data : {}
                if (status == true) {
                    if (collectionpoints.length > 0) {
                        // renderCollectionPointTable(collectionpoints)
                        setCollectionPoints(collectionpoints)
                    }
                }
            }
        });
        return false
    }

    function showSuburbModal() {
        $('.select2-show-search').select2("destroy").select2();
        $('#suburb_modal').modal('toggle')
    }

    $('#suburb-filter').on('change', function () {
        selected_suburb = $(this).val()
        if (selected_suburb == 'ALL') {
            selected_suburb = ''
        }
        getCollectionPoints()
    })

    var options = {
        valueNames: [
            { name: 'image', attr: 'src' },
            'name',
            'price',
            { name: 'data-price', selector: '.price', attr: 'data-price' },
            'count',
            { name: 'product_id', selector: '.product_id', attr: 'data-product' },
        ],
        item: `<div class="col-sm-6 col-xl-3 col-12 item">
                <div class="card item_card box_view wow animate__bounceIn" data-wow-delay="1.1s">
                    <div class="item_cover">
                        <img src="" alt="" class="image">
                    </div>
                    <h4 class="name"></h4>
                    <div class="product_quantity">
                        <div class="inner">
                            <div class="quantity-selectors">
                                <button type="button" class="decrement-quantity" aria-label="Subtract one" data-direction="-1" disabled="disabled" onclick="changeQuantities(this)"> 
                                    <svg class="icon">
                                        <use xlink:href="#minus"></use>
                                    </svg>
                                </button>
                                <button type="button" class="increment-quantity" aria-label="Add one" data-direction="1" onclick="changeQuantities(this)"> 
                                    <svg class="icon">
                                        <use xlink:href="#plus"></use>
                                    </svg>
                                </button>
                            </div>
                            <input data-min="1" data-max="0" type="text" name="count[]" value="0" readonly="true" class="count data-price" data-price>
                            <div class="quantity-selectors-container"></div>
                        </div>
                    </div>
                    <h3>$<span class="price"></span></h3>
                </div>
            </div>`
    };

    var products_list = new List('products_list', options);

    function renderRegularProducts() {
        $.ajax({
            url: "<%=app_url%>/regularproducts",
            data: {
            },
            type: "GET",
            dataType: "json",
            success: function (data) {
                var {
                    status,
                    products
                } = data;
                console.log({ products })
                if (products.length > 0) {

                    $.each(products, function (key, product) {
                        console.log({ product })
                        products_list.add({
                            image: ASSET_URL + "/" + product.image,
                            name: product.name,
                            price: product.price,
                            'data-price': product.price,
                            count: 0,
                            product_id: product._id,
                            allergen_contents: product.allergen_contents
                        })
                    })
                }
            }
        });
        return false
    }
    renderRegularProducts()

    function checkOrder() {
        if (!scheduled_date) {
            toastr['error']("Please select scheduled date")
            return false
        }
        if (!shift) {
            toastr['error']("Please select shift")
            return false
        }

        var items = products_list.get()
        var products = []
        var total_items_count = 0
        $.each(items, function (key, item) {
            var values = item.values()
            var {
                product_id,
            } = values
            var count = $(`.count:eq(${key})`).val()
            if (count && count > 0) {
                products.push({
                    product_id,
                    count
                })
                total_items_count = total_items_count + +count
            }
        })

        if (products.length <= 0) {
            toastr['error']("No products selected")
            return false
        }


        if (delivery_type == 'express' && total_items_count < 3) {
            toastr['error']("Atleast 3 foods should be selected for Delivery")
            return false
        }

        var total_delivery_charge = 0
        var itemtotal = 0
        var tax = 0
        var discount_price = 0
        var total = 0
        var product_html = ""

        if (delivery_type == 'express') {
            total_delivery_charge = total_items_count * delivery_charge
        }

        if (items.length) {
            $.each(items, function (key, item) {
                var values = item.values()
                var {
                    'data-price': price,
                    name
                } = values
                var count = $(`.count:eq(${key})`).val()
                if (count && count > 0) {
                    itemtotal += (+price * +count)
                    product_html += `
                    <li>
                        <div> (x${count}) ${name} </div>
                        <div><span> $${(+price * +count).toFixed(2)}</span></div>
                    </li>
                    `
                }
            })
            tax = (itemtotal * (+gst / +100))
            total = +itemtotal + +tax - +discount_price
        }
        var pricingHtml = `        
            <ul>
                ${product_html}
                <li class="hr"> </li>
                <li>
                    <div> Item Total </div>
                    <div><span> $${itemtotal.toFixed(2)}</span></div>
                </li>
                <li>
                    <div> Taxes and Charge </div>
                    <div> $${tax.toFixed(2)}</div>
                </li
                <li>
                    <div> Delivery charge </div>
                    <div> $${total_delivery_charge.toFixed(2)}</div>
                </li>
                <li class="hr"> </li>
                <li class="total">
                    <div> Total to pay </div>
                    <div> $${total.toFixed(2)}</div>
                </li>
            </ul>
        `
        $.confirm({
            title: 'Checkout confirmation',
            content: '',
            onContentReady: function () {
                var self = this;
                this.setContentPrepend(`
                <div class="">
                    <div class="payment_details_con" style="max-width:100% !important">
                        ${pricingHtml}
                    </div>
                </div>                
                `);
            },
            columnClass: 'medium',
            buttons: {
                confirm: {
                    text: 'Conform Order',
                    btnClass: 'btn btn-primary btn-lg btn-round',
                    keys: ['enter'],
                    action: function () {
                        $.confirm({
                            title: "Confirm order",
                            content: function () {
                                var self = this;
                                self.setContent('');
                                return $.ajax({
                                    url: '<%=app_url%>/scheduledbooking',
                                    data: {
                                        address_id:delivery_address_id,
                                        scheduled_date,
                                        shift,
                                        products
                                    },
                                    dataType: 'json',
                                    method: 'POST'
                                }).done(function (response) {
                                    console.log(response)
                                    var { status, errors, message } = response
                                    if (status == true) {
                                        self.setContentAppend(`<div class="alert alert-success">${message}</div>`);
                                    } else {
                                        self.close()
                                        toastr['error'](message)
                                    }

                                }).fail(function () {
                                    self.setContentAppend('<div class="alert alert-danger">Scheduled order failed</div>');
                                }).always(function () {
                                    // self.setContentAppend('<div>Always!</div>');
                                });
                            },
                            contentLoaded: function (data, status, xhr) {
                                // self.setContentAppend('<div>Content loaded!</div>');
                            },
                            onContentReady: function () {
                                // this.setContentAppend('<div>Content ready!</div>');
                            },
                            buttons: {
                                close: function () {
                                    window.location.reload()
                                }
                            }
                        });
                    }
                },
                cancel: {
                    text: 'Cancel',
                    btnClass: 'btn btn-primary btn-lg btn-round',
                    keys: ['enter'],
                    action: function () {
                        // $.alert('Order ');
                    }
                }
            }
        });

    }

</script>
<script defer
    src="https://maps.googleapis.com/maps/api/js?key=AIzaSyDaSZjnljvhBYICw_WUf9uijK-LWZI0pyo&libraries=places,directions&callback=initMap"></script>
<%-include('./shared/footer-panel.ejs')%>